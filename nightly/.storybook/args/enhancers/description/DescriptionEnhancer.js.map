{"version":3,"file":"DescriptionEnhancer.js","sourceRoot":"","sources":["../../../../../.storybook/args/enhancers/description/DescriptionEnhancer.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AAEnD,MAAM,OAAO,mBAAmB;IAC5B,YAAY,QAA8B;QAMnC,YAAO,GAAG,CAAC,QAAiB,EAAW,EAAE;YAC5C,OAAO,KAAK,CAAC;QACjB,CAAC,CAAC;QAPE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAQM,OAAO,CAAC,QAAiB;QAC5B,MAAM,WAAW,GAAG,QAAQ,CAAC,WAAW,IAAI,EAAE,CAAC;QAC/C,MAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACxE,mEAAmE;QACnE,QAAQ,CAAC,WAAW;YAChB,WAAW,GAAG,eAAe,CAAC,kBAAkB,CAAC,CAAC;QACtD,OAAO,QAAQ,CAAC,aAAa,CAAC;QAC9B,OAAO,QAAQ,CAAC;IACpB,CAAC;CACJ","sourcesContent":["import { IArgTypeEnhancer, ArgType, IDescriptionRenderer } from \"../../types\";\nimport { JSXToHtmlString } from \"../EnhancerUtils\";\n\nexport class DescriptionEnhancer implements IArgTypeEnhancer {\n    constructor(renderer: IDescriptionRenderer) {\n        this.renderer = renderer;\n    }\n\n    private renderer: IDescriptionRenderer;\n\n    public isMatch = (argsType: ArgType): boolean => {\n        return false;\n    };\n\n    public enhance(argsType: ArgType): ArgType {\n        const description = argsType.description || \"\";\n        const descriptionElement = this.renderer.render(argsType.UI5CustomData);\n        // we don't parse the props.description as it already contains HTML\n        argsType.description =\n            description + JSXToHtmlString(descriptionElement);\n        delete argsType.UI5CustomData;\n        return argsType;\n    }\n}\n"]}