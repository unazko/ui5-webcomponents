{"version":3,"file":"enhanceArgTypesDescriptions.js","sourceRoot":"","sources":["../../../../.storybook/args/enhancers/enhanceArgTypesDescriptions.ts"],"names":[],"mappings":"AAEA,OAAO,EACH,wBAAwB,EACxB,wBAAwB,EACxB,yBAAyB,EACzB,yBAAyB,GAC5B,MAAM,eAAe,CAAC;AAIvB,MAAM,0BAA0B;IAC5B,YAAY,SAA6B;QAIjC,cAAS,GAAuB,EAAE,CAAC;QAHvC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAIO,cAAc,CAAC,QAAiB;QACpC,IAAI,MAAM,GAAG,QAAQ,CAAC;QACtB,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;YACnC,IAAI,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAC5B,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACpC,MAAM;aACT;SACJ;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAEM,2BAA2B,CAAC,IAAU;QACzC,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;YACrB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE;gBAC5B,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aAC1C;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAED,MAAM,SAAS,GAAG;IACd,IAAI,wBAAwB,CAAC,IAAI,wBAAwB,EAAE,CAAC;IAC5D,IAAI,yBAAyB,CAAC,IAAI,yBAAyB,EAAE,CAAC;CACjE,CAAC;AAEF,MAAM,QAAQ,GAAG,IAAI,0BAA0B,CAAC,SAAS,CAAC,CAAC;AAE3D,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,IAAU,EAAE,EAAE;IACtD,MAAM,YAAY,GAAG,QAAQ,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC;IAChE,OAAO,YAAY,CAAC;AACxB,CAAC,CAAC","sourcesContent":["import { ArgTypes } from \"@storybook/types\";\nimport { IArgTypeEnhancer, ArgType } from \"../types\";\nimport {\n    EventDescriptionEnhancer,\n    EventDescriptionRenderer,\n    MethodDescriptionEnhancer,\n    MethodDescriptionRenderer,\n} from \"./description\";\n\ntype Args = Partial<ArgTypes<any>>;\n\nclass ArgTypeDescriptionEnhancer {\n    constructor(enhancers: IArgTypeEnhancer[]) {\n        this.enhancers = enhancers;\n    }\n\n    private enhancers: IArgTypeEnhancer[] = [];\n\n    private applyEnhancers(argsType: ArgType): ArgType {\n        let result = argsType;\n        for (const enhancer of this.enhancers) {\n            if (enhancer.isMatch(argsType)) {\n                result = enhancer.enhance(argsType);\n                break;\n            }\n        }\n        return result;\n    }\n\n    public enhanceArgTypesDescriptions(args: Args): Args {\n        for (const prop in args) {\n            const type = args[prop];\n            if (type && type.UI5CustomData) {\n                args[prop] = this.applyEnhancers(type);\n            }\n        }\n        return args;\n    }\n}\n\nconst enhancers = [\n    new EventDescriptionEnhancer(new EventDescriptionRenderer()),\n    new MethodDescriptionEnhancer(new MethodDescriptionRenderer()),\n];\n\nconst enhancer = new ArgTypeDescriptionEnhancer(enhancers);\n\nexport const enhanceArgTypesDescriptions = (args: Args) => {\n    const enhancedArgs = enhancer.enhanceArgTypesDescriptions(args);\n    return enhancedArgs;\n};\n"]}