"use strict";import{camelToKebabCase as p}from"./util/StringHelper.js";import{getSlottedNodes as d}from"./util/SlotsHelper.js";import{getEffectiveScopingSuffixForTag as u}from"./CustomElementsScopeUtils.js";class f{constructor(t){this.metadata=t}getInitialState(){if(Object.prototype.hasOwnProperty.call(this,"_initialState"))return this._initialState;const t={},a=this.slotsAreManaged(),o=this.getProperties();for(const e in o){const i=o[e].type,n=o[e].defaultValue;i===Boolean?(t[e]=!1,n!==void 0&&console.warn("The 'defaultValue' metadata key is ignored for all booleans properties, they would be initialized with 'false' by default")):o[e].multiple?Object.defineProperty(t,e,{enumerable:!0,get(){return[]}}):i===Object?Object.defineProperty(t,e,{enumerable:!0,get(){return"defaultValue"in o[e]?o[e].defaultValue:{}}}):i===String?t[e]="defaultValue"in o[e]?o[e].defaultValue:"":t[e]=n}if(a){const e=this.getSlots();for(const[i,n]of Object.entries(e)){const l=n.propertyName||i;t[l]=[]}}return this._initialState=t,t}static validatePropertyValue(t,a){return a.multiple&&t?t.map(e=>s(e,a)):s(t,a)}static validateSlotValue(t,a){return g(t,a)}getPureTag(){return this.metadata.tag||""}getTag(){const t=this.metadata.tag;if(!t)return"";const a=u(t);return a?`${t}-${a}`:t}hasAttribute(t){const a=this.getProperties()[t];return a.type!==Object&&!a.noAttribute&&!a.multiple}getPropertiesList(){return Object.keys(this.getProperties())}getAttributesList(){return this.getPropertiesList().filter(this.hasAttribute.bind(this)).map(p)}canSlotText(){return this.getSlots().default?.type===Node}hasSlots(){return!!Object.entries(this.getSlots()).length}hasIndividualSlots(){return this.slotsAreManaged()&&Object.values(this.getSlots()).some(t=>t.individualSlots)}slotsAreManaged(){return!!this.metadata.managedSlots}supportsF6FastNavigation(){return!!this.metadata.fastNavigation}getProperties(){return this.metadata.properties||(this.metadata.properties={}),this.metadata.properties}getEvents(){return this.metadata.events||(this.metadata.events={}),this.metadata.events}getSlots(){return this.metadata.slots||(this.metadata.slots={}),this.metadata.slots}isLanguageAware(){return!!this.metadata.languageAware}isThemeAware(){return!!this.metadata.themeAware}getShadowRootOptions(){return this.metadata.shadowRootOptions||{}}isFormAssociated(){return!!this.metadata.formAssociated}shouldInvalidateOnChildChange(t,a,o){const e=this.getSlots()[t].invalidateOnChildChange;if(e===void 0)return!1;if(typeof e=="boolean")return e;if(typeof e=="object"){if(a==="property"){if(e.properties===void 0)return!1;if(typeof e.properties=="boolean")return e.properties;if(Array.isArray(e.properties))return e.properties.includes(o);throw new Error("Wrong format for invalidateOnChildChange.properties: boolean or array is expected")}if(a==="slot"){if(e.slots===void 0)return!1;if(typeof e.slots=="boolean")return e.slots;if(Array.isArray(e.slots))return e.slots.includes(o);throw new Error("Wrong format for invalidateOnChildChange.slots: boolean or array is expected")}}throw new Error("Wrong format for invalidateOnChildChange: boolean or object is expected")}}const s=(r,t)=>{const a=t.type;let o=t.validator;return a&&a.isDataTypeClass&&(o=a),o?o.isValid(r)?r:t.defaultValue:!a||a===String?typeof r=="string"||typeof r>"u"||r===null?r:r.toString():a===Boolean?typeof r=="boolean"?r:!1:a===Object?typeof r=="object"?r:t.defaultValue:r in a?r:t.defaultValue},g=(r,t)=>(r&&d(r).forEach(a=>{if(!(a instanceof t.type))throw new Error(`The element is not of type ${t.type.toString()}`)}),r);export default f;
//# sourceMappingURL=UI5ElementMetadata.js.map
