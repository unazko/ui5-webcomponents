"use strict";import a from"../types/InvisibleMessageMode.js";import o from"./getSingletonElementInstance.js";import{attachBoot as r}from"../Boot.js";let t,i;const l=e=>{e.style.position="absolute",e.style.clip="rect(1px,1px,1px,1px)",e.style.userSelect="none",e.style.left="-1000px",e.style.top="-1000px",e.style.pointerEvents="none"};r(()=>{t&&i||(t=document.createElement("span"),i=document.createElement("span"),t.classList.add("ui5-invisiblemessage-polite"),i.classList.add("ui5-invisiblemessage-assertive"),t.setAttribute("aria-live","polite"),i.setAttribute("aria-live","assertive"),t.setAttribute("role","alert"),i.setAttribute("role","alert"),l(t),l(i),o("ui5-static-area").appendChild(t),o("ui5-static-area").appendChild(i))});const p=(e,n)=>{const s=n===a.Assertive?i:t;s.textContent="",s.textContent=e,n!==a.Assertive&&n!==a.Polite&&console.warn('You have entered an invalid mode. Valid values are: "Polite" and "Assertive". The framework will automatically set the mode to "Polite".'),setTimeout(()=>{s.textContent===e&&(s.textContent="")},3e3)};export default p;
//# sourceMappingURL=InvisibleMessage.js.map
