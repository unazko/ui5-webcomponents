/* eslint no-unused-vars: 0 */
import { html, repeat, styleMap, ifDefined, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
function block0(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-responsive-popover", tags, suffix)} tokenizer-popover="true" ?open="${this.open}" .opener="${ifDefined(this.morePopoverOpener)}" style=${styleMap(this.styles.popover)} content-only-on-desktop prevent-focus-restore ?hide-arrow="${this.hidePopoverArrow}" placement="Bottom" horizontal-align="Start" @ui5-before-close="${ifDefined(this.handleBeforeClose)}" @ui5-close="${ifDefined(this.handleAfterClose)}" @ui5-before-open="${ifDefined(this.handleBeforeOpen)}">${this._isPhone ? block1.call(this, context, tags, suffix) : undefined}<${scopeTag("ui5-list", tags, suffix)} class="ui5-tokenizer-list" selection-mode=${ifDefined(this._nMoreListMode)} separators="None" @keydown="${this._onPopoverListKeydown}" @ui5-item-delete=${ifDefined(this.itemDelete)}>${repeat(this._tokens, (item, index) => item._id || index, (item, index) => block2.call(this, context, tags, suffix, item, index))}</${scopeTag("ui5-list", tags, suffix)}>${this._isPhone ? block3.call(this, context, tags, suffix) : undefined}</${scopeTag("ui5-responsive-popover", tags, suffix)}>` : html `<ui5-responsive-popover tokenizer-popover="true" ?open="${this.open}" .opener="${ifDefined(this.morePopoverOpener)}" style=${styleMap(this.styles.popover)} content-only-on-desktop prevent-focus-restore ?hide-arrow="${this.hidePopoverArrow}" placement="Bottom" horizontal-align="Start" @ui5-before-close="${ifDefined(this.handleBeforeClose)}" @ui5-close="${ifDefined(this.handleAfterClose)}" @ui5-before-open="${ifDefined(this.handleBeforeOpen)}">${this._isPhone ? block1.call(this, context, tags, suffix) : undefined}<ui5-list class="ui5-tokenizer-list" selection-mode=${ifDefined(this._nMoreListMode)} separators="None" @keydown="${this._onPopoverListKeydown}" @ui5-item-delete=${ifDefined(this.itemDelete)}>${repeat(this._tokens, (item, index) => item._id || index, (item, index) => block2.call(this, context, tags, suffix, item, index))}</ui5-list>${this._isPhone ? block3.call(this, context, tags, suffix) : undefined}</ui5-responsive-popover>`; }
function block1(context, tags, suffix) { return suffix ? html `<div slot="header" class="ui5-responsive-popover-header"><div class="row"><${scopeTag("ui5-title", tags, suffix)} level="H5" wrapping-type="None" class="ui5-responsive-popover-header-text">${ifDefined(this.morePopoverTitle)}</${scopeTag("ui5-title", tags, suffix)}></div></div>` : html `<div slot="header" class="ui5-responsive-popover-header"><div class="row"><ui5-title level="H5" wrapping-type="None" class="ui5-responsive-popover-header-text">${ifDefined(this.morePopoverTitle)}</ui5-title></div></div>`; }
function block2(context, tags, suffix, item, index) { return suffix ? html `<${scopeTag("ui5-li", tags, suffix)} .tokenRef=${ifDefined(item)} wrapping-type="Normal">${ifDefined(item.text)}</${scopeTag("ui5-li", tags, suffix)}>` : html `<ui5-li .tokenRef=${ifDefined(item)} wrapping-type="Normal">${ifDefined(item.text)}</ui5-li>`; }
function block3(context, tags, suffix) { return suffix ? html `<div slot="footer" class="ui5-responsive-popover-footer"><${scopeTag("ui5-button", tags, suffix)} design="Emphasized" data-ui5-tokenizer-dialog-ok-button @click="${this.handleDialogButtonPress}">OK</${scopeTag("ui5-button", tags, suffix)}><${scopeTag("ui5-button", tags, suffix)} design="Transparent" @click="${this.handleDialogButtonPress}">Cancel</${scopeTag("ui5-button", tags, suffix)}></div>` : html `<div slot="footer" class="ui5-responsive-popover-footer"><ui5-button design="Emphasized" data-ui5-tokenizer-dialog-ok-button @click="${this.handleDialogButtonPress}">OK</ui5-button><ui5-button design="Transparent" @click="${this.handleDialogButtonPress}">Cancel</ui5-button></div>`; }
export default block0;
//# sourceMappingURL=TokenizerPopoverTemplate.lit.js.map