{"version":3,"file":"Option.stories.js","sourceRoot":"","sources":["../../../../../_stories/main/Select/Option/Option.stories.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAK3D,OAAO,QAAQ,EAAE,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAIxD,OAAO,EAAE,QAAQ,EAAE,MAAM,gCAAgC,CAAC;AAE1D,MAAM,SAAS,GAAG,YAAY,CAAC;AAE/B,eAAe;IACb,KAAK,EAAE,oBAAoB;IAC3B,SAAS,EAAE,QAAQ;IACnB,QAAQ;IACR,UAAU,EAAE;QACV,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ,CAAC,EAAE,GAAG,aAAa,EAAE,SAAS,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC;SAC5E;KACF;CACc,CAAC;AAElB,MAAM,QAAQ,GAAyC,CAAC,IAAI,EAAE,EAAE;IAC9D,OAAO,IAAI,CAAA;;sBAES,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC;gBACpC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;WAC7B,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;gBACf,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC5B,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;MAC3B,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;eACf,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,KAAK,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;AAC1B,KAAK,CAAC,IAAI,GAAG;IACX,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,SAAS;IAClB,QAAQ,EAAE,IAAI;CACf,CAAC","sourcesContent":["import { html } from \"lit\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { unsafeHTML } from \"lit/directives/unsafe-html.js\";\nimport type { Meta } from \"@storybook/web-components\";\n\nimport type Option from \"@ui5/webcomponents/dist/Option.js\";\n\nimport argTypes, { componentInfo } from \"./argTypes.js\";\nimport type { StoryArgsSlots } from \"./argTypes.js\";\nimport type { UI5StoryArgs } from \"../../../../types.js\";\n\nimport { DocsPage } from \"../../../../.storybook/docs.js\";\n\nconst component = \"ui5-option\";\n\nexport default {\n  title: \"Main/Select/Option\",\n  component: \"Option\",\n  argTypes,\n  parameters: {\n    docs: {\n      page: DocsPage({ ...componentInfo, component, showDefaultStoryOnly: true })\n    },\n  },\n} as Meta<Option>;\n\nconst Template: UI5StoryArgs<Option, StoryArgsSlots> = (args) => {\n  return html`<ui5-select>\n   <ui5-option\n   additional-text=\"${ifDefined(args.additionalText)}\"\n   ?disabled=\"${ifDefined(args.disabled)}\"\n   icon=\"${ifDefined(args.icon)}\"\n   ?selected=\"${ifDefined(args.selected)}\"\n   value=\"${ifDefined(args.value)}\"\n   >${unsafeHTML(args.default)}</ui5-option>\n</ui5-select> `;\n};\n\nexport const Basic = Template.bind({});\nBasic.tags = [\"_hidden_\"];\nBasic.args = {\n  icon: \"laptop\",\n  default: \"Desktop\",\n  selected: true\n};"]}