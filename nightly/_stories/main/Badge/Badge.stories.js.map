{"version":3,"file":"Badge.stories.js","sourceRoot":"","sources":["../../../../_stories/main/Badge/Badge.stories.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAE3D,OAAO,QAAQ,EAAE,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAGxD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAGpD,MAAM,SAAS,GAAG,WAAW,CAAC;AAE9B,eAAe;IACd,KAAK,EAAE,YAAY;IACnB,SAAS,EAAE,OAAO;IAClB,UAAU,EAAE;QACX,IAAI,EAAE;YACL,IAAI,EAAE,QAAQ,CAAC,EAAE,GAAG,aAAa,EAAE,SAAS,EAAE,CAAC;SAC/C;KACD;IACD,QAAQ;CACO,CAAC;AAEjB,MAAM,QAAQ,GAAwC,CAAC,IAAI,EAAE,EAAE;IAC9D,OAAO,IAAI,CAAA;;iBAEK,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;UAClC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;;GAE5B,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;GACrB,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;aACd,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,KAAK,CAAC,IAAI,GAAG;IACZ,WAAW,EAAE,GAAG;IAChB,IAAI,EAAE,kDAAkD;IACxD,OAAO,EAAE,SAAS;CAClB,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC5C,UAAU,CAAC,IAAI,GAAG;IACjB,OAAO,EAAE,uCAAuC;IAChD,KAAK,EAAE,cAAc;CACrB,CAAC;AAEF,MAAM,WAAW,GAAG,CAAC,IAAY,EAAU,EAAE,CAAC,mBAAmB,IAAI,2BAA2B,CAAC;AACjG,MAAM,qBAAqB,GAAG;IAC7B,EAAE,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAC5C,EAAE,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAC7C,EAAE,IAAI,EAAE,WAAW,CAAC,eAAe,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE;IAC9D,EAAE,IAAI,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IACzC,EAAE,IAAI,EAAE,WAAW,CAAC,YAAY,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAChD,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;IAChC,EAAE,IAAI,EAAE,WAAW,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE;IACvD,EAAE,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE;IAClD,EAAE,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE;IACpD,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE;CACjC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACjD,eAAe,CAAC,UAAU,GAAG;IAC5B,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;QACd,OAAO,IAAI,CAAA;KACR,qBAAqB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACzC,OAAO,KAAK,CAAC;gBACZ,IAAI,EAAE;oBACL,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE;oBACvD,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI;oBACjC,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO;iBAC1C;aACD,CAAC,CAAC;QACJ,CAAC,CAAC,EAAE,CAAC;IACN,CAAC;CACD,CAAC","sourcesContent":["import { html } from \"lit\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { unsafeHTML } from \"lit/directives/unsafe-html.js\";\nimport type { Meta } from \"@storybook/web-components\";\nimport argTypes, { componentInfo } from \"./argTypes.js\";\nimport type { StoryArgsSlots } from \"./argTypes.js\";\nimport type { UI5StoryArgs } from \"../../../types.js\";\nimport { DocsPage } from \"../../../.storybook/docs\";\nimport type Badge from \"@ui5/webcomponents/dist/Badge.js\";\n\nconst component = \"ui5-badge\";\n\nexport default {\n\ttitle: \"Main/Badge\",\n\tcomponent: \"Badge\",\n\tparameters: {\n\t\tdocs: {\n\t\t\tpage: DocsPage({ ...componentInfo, component })\n\t\t},\n\t},\n\targTypes,\n} as Meta<Badge>;\n\nconst Template: UI5StoryArgs<Badge, StoryArgsSlots> = (args) => {\n\treturn html`\n<ui5-badge\n\tcolor-scheme=\"${ifDefined(args.colorScheme)}\"\n\tstyle=\"${ifDefined(args.style)}\"\n>\n\t${unsafeHTML(args.icon)}\n\t${unsafeHTML(args.default)}\n</ui5-badge>`;\n};\n\nexport const Basic = Template.bind({});\nBasic.args = {\n\tcolorScheme: \"6\",\n\ticon: `<ui5-icon name=\"pending\" slot=\"icon\"></ui5-icon>`,\n\tdefault: \"Pending\"\n};\n\nexport const Truncating = Template.bind({});\nTruncating.args = {\n\tdefault: \"This would truncate as it is too long\",\n\tstyle: \"width: 200px\",\n};\n\nconst getIconHTML = (name: string): string => `<ui5-icon name=\"${name}\" slot=\"icon\"></ui5-icon>`;\nconst AllColorSchemesBadges = [\n\t{ icon: getIconHTML(\"accept\"), default: \"\" },\n\t{ icon: getIconHTML(\"sap-ui5\"), default: \"\" },\n\t{ icon: getIconHTML(\"add-equipment\"), default: \"In progress\" },\n\t{ icon: getIconHTML(\"lab\"), default: \"\" },\n\t{ icon: getIconHTML(\"email-read\"), default: \"\" },\n\t{ icon: \"\", default: \"Pending\" },\n\t{ icon: getIconHTML(\"lightbulb\"), default: \"New idea\" },\n\t{ icon: getIconHTML(\"locked\"), default: \"Locked\" },\n\t{ icon: getIconHTML(\"flight\"), default: \"En route\" },\n\t{ icon: \"\", default: \"Archived\" },\n];\n\nexport const AllColorSchemes = Template.bind({});\nAllColorSchemes.decorators = [\n\t(story, ctx) => {\n\t\treturn html`\n\t\t\t${AllColorSchemesBadges.map((badge, i) => {\n\t\t\treturn story({\n\t\t\t\targs: {\n\t\t\t\t\tcolorScheme: ctx.args.colorScheme || (i + 1).toString(),\n\t\t\t\t\ticon: ctx.args.icon || badge.icon,\n\t\t\t\t\tdefault: ctx.args.default || badge.default,\n\t\t\t\t}\n\t\t\t});\n\t\t})}`;\n\t}\n];"]}