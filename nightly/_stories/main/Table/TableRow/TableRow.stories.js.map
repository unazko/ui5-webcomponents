{"version":3,"file":"TableRow.stories.js","sourceRoot":"","sources":["../../../../../_stories/main/Table/TableRow/TableRow.stories.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,OAAO,QAAQ,EAAE,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAIxD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAGvD,OAAO,EAAE,SAAS,EAAE,MAAM,mCAAmC,CAAC;AAC9D,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAEhE,MAAM,SAAS,GAAG,eAAe,CAAC;AAElC,eAAe;IACd,KAAK,EAAE,sBAAsB;IAC7B,SAAS,EAAE,UAAU;IACrB,UAAU,EAAE;QACX,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ,CAAC,EAAE,GAAG,aAAa,EAAE,SAAS,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC;SAC5E;KACD;IACD,QAAQ;CACU,CAAC;AAEpB,MAAM,QAAQ,GAA2C,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA;;;;;;eAMxD,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;cAC1B,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;SAC7B,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;;CAE3B,CAAC;AAEF,MAAM,CAAC,MAAM,KAAK,GAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACtC,KAAK,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;AAC1B,KAAK,CAAC,IAAI,GAAG;IACZ,OAAO,EAAE;;kBAEQ;CACjB,CAAC","sourcesContent":["import { html } from \"lit\";\nimport type { Meta } from \"@storybook/web-components\";\n\nimport argTypes, { componentInfo } from \"./argTypes.js\";\nimport type { StoryArgsSlots } from \"./argTypes.js\";\nimport type { UI5StoryArgs } from \"../../../../types.js\";\n\nimport { DocsPage } from \"../../../../.storybook/docs\";\n\nimport type TableRow from \"@ui5/webcomponents/dist/TableRow.js\";\nimport { ifDefined } from \"lit-html/directives/if-defined.js\";\nimport { unsafeHTML } from \"lit-html/directives/unsafe-html.js\";\n\nconst component = \"ui5-table-row\";\n\nexport default {\n\ttitle: \"Main/Table/Table Row\",\n\tcomponent: \"TableRow\",\n\tparameters: {\n\t\tdocs: {\n\t\t  page: DocsPage({ ...componentInfo, component, showDefaultStoryOnly: true })\n\t\t},\n\t},\n\targTypes,\n} as Meta<TableRow>;\n\nconst Template: UI5StoryArgs<TableRow, StoryArgsSlots> = (args) => html`\n<ui5-table>\n\t<ui5-table-column slot=\"columns\">\n\t\t<span>Product</span>\n\t</ui5-table-column>\n\t<ui5-table-row\n\t\t?navigated=${ifDefined(args.navigated)}\n\t\t?selected=${ifDefined(args.selected)}\n\t\ttype=${ifDefined(args.type)}\n\t>${unsafeHTML(args.default)}</ui5-table-row>\n</ui5-table>\n`;\n\nexport const Basic= Template.bind({});\nBasic.tags = [\"_hidden_\"];\nBasic.args = {\n\tdefault: `<ui5-table-cell>\n\tNotebook Basic 15\n</ui5-table-cell>`\n};"]}