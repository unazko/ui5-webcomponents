{"version":3,"file":"Token.stories.js","sourceRoot":"","sources":["../../../../../_stories/main/MultiInput/Token/Token.stories.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,OAAO,QAAQ,EAAE,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAIxD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAGvD,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAE3D,MAAM,SAAS,GAAG,WAAW,CAAC;AAE9B,eAAe;IACX,KAAK,EAAE,wBAAwB;IAC/B,SAAS,EAAE,OAAO;IAClB,UAAU,EAAE;QACR,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ,CAAC,EAAE,GAAG,aAAa,EAAE,SAAS,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC;SAC5E;KACJ;IACD,QAAQ;CACI,CAAC;AAEjB,MAAM,QAAQ,GAAwC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA;;;;UAI1D,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;eACf,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;eACxB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;;GAEpC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;;mBAEV,CAAC;AAEpB,MAAM,CAAC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,KAAK,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;AAC1B,KAAK,CAAC,IAAI,GAAG;IACZ,IAAI,EAAE,WAAW;CACjB,CAAC","sourcesContent":["import { html } from \"lit\";\nimport type { Meta } from \"@storybook/web-components\";\n\nimport argTypes, { componentInfo } from \"./argTypes.js\";\nimport type { StoryArgsSlots } from \"./argTypes.js\";\nimport type { UI5StoryArgs } from \"../../../../types.js\";\n\nimport { DocsPage } from \"../../../../.storybook/docs\";\n\nimport type Token from \"@ui5/webcomponents/dist/Token.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { unsafeHTML } from \"lit/directives/unsafe-html.js\";\n\nconst component = \"ui5-token\";\n\nexport default {\n    title: \"Main/Multi Input/Token\",\n    component: \"Token\",\n    parameters: {\n        docs: {\n          page: DocsPage({ ...componentInfo, component, showDefaultStoryOnly: true })\n        },\n    },\n    argTypes,\n} as Meta<Token>;\n\nconst Template: UI5StoryArgs<Token, StoryArgsSlots> = (args) => html`\n<ui5-multi-input>\n\t<ui5-token\n\t\tslot=\"tokens\"\n\t\ttext=\"${ifDefined(args.text)}\"\n\t\t?selected=\"${ifDefined(args.selected)}\"\n\t\t?readonly=\"${ifDefined(args.readonly)}\"\n\t>\n\t${unsafeHTML(args.closeIcon)}\n\t</ui5-token>\n</ui5-multi-input>`;\n\nexport const Basic = Template.bind({});\nBasic.tags = [\"_hidden_\"];\nBasic.args = {\n\ttext: \"Argentina\"\n};\n\n"]}