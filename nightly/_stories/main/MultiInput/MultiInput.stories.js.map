{"version":3,"file":"MultiInput.stories.js","sourceRoot":"","sources":["../../../../_stories/main/MultiInput/MultiInput.stories.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,OAAO,QAAQ,EAAE,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAIxD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAGpD,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAE3D,MAAM,SAAS,GAAG,iBAAiB,CAAC;AAEpC,eAAe;IACX,KAAK,EAAE,iBAAiB;IACxB,SAAS;IACT,aAAa,EAAE,EAAC,OAAO,EAAG,WAAW,EAAC;IACtC,UAAU,EAAE;QACR,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ,CAAC,EAAE,GAAG,aAAa,EAAE,SAAS,EAAE,CAAC;SAChD;KACJ;IACD,QAAQ;CACS,CAAC;AAEtB,IAAI,KAAK,GAAG,CAAC,CAAC;AAEd,MAAM,QAAQ,GAA6C,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA;;mBAEtD,EAAE,KAAK;UAChB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;0BACL,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC;sBACrC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC;;GAElD,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;GACxB,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC;GAClC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;GACrB,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;mBACP,CAAC;AAEpB,MAAM,CAAC,MAAM,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACjD,eAAe,CAAC,IAAI,GAAG;IACtB,KAAK,EAAE,aAAa;CACpB,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACxD,sBAAsB,CAAC,IAAI,GAAG;IAC7B,KAAK,EAAE,iBAAiB;IACxB,iBAAiB,EAAE,IAAI;CACvB,CAAC;AACF,sBAAsB,CAAC,SAAS,GAAG,+CAA+C,CAAC;AAEnF,MAAM,CAAC,MAAM,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAClD,gBAAgB,CAAC,IAAI,GAAG;IACvB,MAAM,EAAE;;;;;;;;;;;;kDAYyC;CACjD,CAAC;AACF,gBAAgB,CAAC,SAAS,GAAG,yBAAyB,CAAC;AAEvD,MAAM,CAAC,MAAM,uBAAuB,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzD,uBAAuB,CAAC,IAAI,GAAG;IAC9B,OAAO,EAAE;;;;;;;;;;;;wDAY8C;IACvD,iBAAiB,EAAE,kEAAkE;IACrF,eAAe,EAAE,IAAI;CACrB,CAAC;AACF,uBAAuB,CAAC,UAAU,GAAG;IACpC,CAAC,KAAK,EAAE,EAAE;QACV,OAAO,IAAI,CAAA;GACT,KAAK,EAAE;;;;;;;;wCAQ8B,KAAK;;;;wCAIL,KAAK;;;;;;;;;;;;;;;;;;;;;;;wCAuBL,KAAK;;;;;;;;;;;;;;;;;UAiBnC,CAAC;IACV,CAAC;CACD,CAAA;AACD,uBAAuB,CAAC,SAAS,GAAG,qDAAqD,CAAC","sourcesContent":["import { html } from \"lit\";\nimport type { Meta, StoryFn } from \"@storybook/web-components\";\n\nimport argTypes, { componentInfo } from \"./argTypes.js\";\nimport type { StoryArgsSlots } from \"./argTypes.js\";\nimport type { UI5StoryArgs } from \"../../../types.js\";\n\nimport { DocsPage } from \"../../../.storybook/docs\";\n\nimport type MultiInput from \"@ui5/webcomponents/dist/MultiInput.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { unsafeHTML } from \"lit/directives/unsafe-html.js\";\n\nconst component = \"ui5-multi-input\";\n\nexport default {\n    title: \"Main/MultiInput\",\n    component,\n    subcomponents: {'Token' : 'ui5-token'},\n    parameters: {\n        docs: {\n          page: DocsPage({ ...componentInfo, component })\n        },\n    },\n    argTypes,\n} as Meta<MultiInput>;\n\nlet index = 0;\n\nconst Template: UI5StoryArgs<MultiInput, StoryArgsSlots> = (args) => html`\n<ui5-multi-input\n\tid=\"multi-input-${++index}\"\n\tvalue=\"${ifDefined(args.value)}\"\n\t?show-value-help-icon=\"${ifDefined(args.showValueHelpIcon)}\"\n\t?show-suggestions=\"${ifDefined(args.showSuggestions)}\"\n>\n\t${unsafeHTML(args.default)}\n\t${unsafeHTML(args.valueStateMessage)}\n\t${unsafeHTML(args.icon)}\n\t${unsafeHTML(args.tokens)}\n</ui5-multi-input>`;\n\nexport const BasicMultiInput = Template.bind({});\nBasicMultiInput.args = {\n\tvalue: \"basic input\"\n};\n\nexport const BasicMultiInputVHDIcon = Template.bind({});\nBasicMultiInputVHDIcon.args = {\n\tvalue: \"value help icon\",\n\tshowValueHelpIcon: true\n};\nBasicMultiInputVHDIcon.storyName = \"Basic Multi Input with Value Help Dialog icon\";\n\nexport const MultiInputTokens = Template.bind({});\nMultiInputTokens.args = {\n\ttokens: `\n\t<ui5-token slot=\"tokens\" text=\"Argentina\"></ui5-token>\n\t<ui5-token slot=\"tokens\" text=\"Bulgaria\"></ui5-token>\n\t<ui5-token slot=\"tokens\" text=\"England\"></ui5-token>\n\t<ui5-token slot=\"tokens\" text=\"Finland\"></ui5-token>\n\t<ui5-token slot=\"tokens\" text=\"Germany\"></ui5-token>\n\t<ui5-token slot=\"tokens\" text=\"Hungary\"></ui5-token>\n\t<ui5-token slot=\"tokens\" text=\"Italy\"></ui5-token>\n\t<ui5-token slot=\"tokens\" text=\"Luxembourg\"></ui5-token>\n\t<ui5-token slot=\"tokens\" text=\"Mexico\"></ui5-token>\n\t<ui5-token slot=\"tokens\" text=\"Philippines\"></ui5-token>\n\t<ui5-token slot=\"tokens\" text=\"Sweden\"></ui5-token>\n\t<ui5-token slot=\"tokens\" text=\"USA\"></ui5-token>`\n};\nMultiInputTokens.storyName = \"Multi Input with tokens\";\n\nexport const MultiInputTokenCreation = Template.bind({});\nMultiInputTokenCreation.args = {\n\tdefault: `\n\t<ui5-suggestion-item text=\"Argentina\"></ui5-suggestion-item>\n\t<ui5-suggestion-item text=\"Bulgaria\"></ui5-suggestion-item>\n\t<ui5-suggestion-item text=\"England\"></ui5-suggestion-item>\n\t<ui5-suggestion-item text=\"Finland\"></ui5-suggestion-item>\n\t<ui5-suggestion-item text=\"Germany\"></ui5-suggestion-item>\n\t<ui5-suggestion-item text=\"Hungary\"></ui5-suggestion-item>\n\t<ui5-suggestion-item text=\"Italy\"></ui5-suggestion-item>\n\t<ui5-suggestion-item text=\"Luxembourg\"></ui5-suggestion-item>\n\t<ui5-suggestion-item text=\"Mexico\"></ui5-suggestion-item>\n\t<ui5-suggestion-item text=\"Philippines\"></ui5-suggestion-item>\n\t<ui5-suggestion-item text=\"Sweden\"></ui5-suggestion-item>\n\t<ui5-suggestion-item text=\"USA\"></ui5-suggestion-item>`,\n\tvalueStateMessage: '<div slot=\"valueStateMessage\">Token is already in the list</div>',\n\tshowSuggestions: true\n};\nMultiInputTokenCreation.decorators = [\n\t(story) => {\n\treturn html`\n\t${story()}\n<script>\n\tvar createTokenFromText = function (text) {\n\t\tlet token = document.createElement(\"ui5-token\");\n\t\ttoken.setAttribute(\"text\", text);\n\t\ttoken.setAttribute(\"slot\", \"tokens\");\n\t\treturn token;\n\t};\n\tdocument.getElementById(\"multi-input-${index}\").addEventListener(\"token-delete\", function (event) {\n\t\tconst token = event.detail?.token;\n\t\ttoken && token.remove();\n\t});\n\tdocument.getElementById(\"multi-input-${index}\").addEventListener(\"paste\", function (event) {\n\t\tevent.preventDefault();\n\n\t\tlet pastedText = (event.clipboardData || window.clipboardData).getData('text/plain');;\n\n\t\tif (!pastedText) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet separatedTexts = pastedText.split(\\/\\\\r\\\\n\\|\\\\r\\|\\\\n\\|\\\\t\\/g).filter(t => !!t);\n\n\t\tif (separatedTexts.length === 1) {\n\n\t\t\tevent.target.value += separatedTexts[0];\n\t\t\treturn;\n\t\t}\n\n\t\tseparatedTexts.forEach((tokenText) => {\n\t\t\tif (tokenText) {\n\t\t\t\tevent.target.appendChild(createTokenFromText(tokenText));\n\t\t\t}\n\t\t})\n\t});\n\tdocument.getElementById(\"multi-input-${index}\").addEventListener(\"change\", function (event) {\n\t\tif (!event.target.value) {\n\t\t\treturn;\n\t\t}\n\t\tlet isDuplicate = event.target.tokens.some(function(token) {\n\t\t\treturn token.text === event.target.value\n\t\t});\n\t\tif (isDuplicate) {\n\t\t\tevent.target.valueState = \"Error\";\n\t\t\tsetTimeout(function () {\n\t\t\t\tevent.target.valueState = \"Normal\";\n\t\t\t}, 2000);\n\t\t\treturn;\n\t\t}\n\t\tevent.target.appendChild(createTokenFromText(event.target.value));\n\t\tevent.target.value = \"\";\n\t});\n</script>`;\n\t}\n]\nMultiInputTokenCreation.storyName = \"Multi Input and token creation onChange and onPaste\";"]}